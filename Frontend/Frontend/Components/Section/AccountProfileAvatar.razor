@using Microsoft.AspNetCore.Mvc
@attribute [StreamRendering]

@rendermode InteractiveAuto

<header>
    <a href="Overview"><img src="/Image/solid.svg" alt="siliconloggo"></a>
</header>

@if(user == null)
{
    <p><em>Loading....</em></p>
}
else
{
    <section class="profilePicture">
        <div class="profile-pic">
            <label class="-label" for="file">
                <span class="glyphicon glyphicon-camera"></span>
                <span>Change Image</span>
            </label>
            <input id="file" type="file" onchange="loadFile(event)" />
            <img src="/Image/noProfilePictureIcon.svg" alt="">



        </div>
        <div class="profileButton">

            <p><strong>@user.FirstName @user.LastName</strong></p>
            <p>@user.Email</p>



            <nav class="accountDetailsButton">
                <a href="#"><i class="fa-solid fa-gear"></i>Account Details</a>
            </nav>
            <nav class="signOutButton">
                <NavLink @onclick="HandleSignOut">
                    <i class="fa-solid fa-arrow-right-from-bracket"></i>Sign Out
                </NavLink>
            </nav>

        </div>
    </section>
}



@code{
    [CascadingParameter]
    private ApplicationUser user { get; set; } = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserManager.GetUserAsync(HttpContext.User) ?? null!;

    }   

    public async Task HandleSignOut()
    {
        await SignInManager.SignOutAsync();


    }
}